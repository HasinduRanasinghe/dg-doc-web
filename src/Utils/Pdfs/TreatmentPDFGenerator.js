import jsPDF from "jspdf";
import 'jspdf-autotable';

class PdfGenerator {
    generatePdf(treatmentPlan) {
        const name = `${treatmentPlan.first_name} ${treatmentPlan.last_name}`;
        const pdf_title = "Treatment Plan";
        const pdf_email = "mailus@dementiaguard.com";
        const pdf_tel = "+94 76 896 5332";
        const pdf_address = "No 221/B, Colombo Road, Galle";

        const doc = new jsPDF("portrait", "px", "a4", false);
        const today = new Date();
        const date = `${today.getFullYear()}-${today.getMonth() + 1}-${today.getDate()}`;

        // Title Section
        const title = `${pdf_title}`;
        doc.setFont("helvetica", "bold");
        doc.setTextColor("#000000");
        doc.setFontSize(30);
        doc.text(title, 30, 30);
        doc.setFontSize(12);
        doc.setTextColor("#999999");
        doc.text(`Generated on ${date}`, 30, 45);

        // Contact Details Section
        doc.setFontSize(16);
        doc.setFont("helvetica", "bold");
        doc.setTextColor("#333333");
        doc.text("Doctor", 30, 70);
        doc.setFontSize(10);
        doc.setFont("helvetica", "normal");
        doc.setTextColor("#555555");
        doc.text(`Tel: ${pdf_tel}`, 30, 80);
        doc.text(`Email: ${pdf_email}`, 30, 90);
        doc.text(`Address: ${pdf_address}`, 30, 100);
        doc.line(30, 110, 600, 110);

        // Patient Info Section with Border
        const sectionMarginTop = 130;
        doc.setFontSize(18);
        doc.setFont("helvetica", "bold");
        doc.setTextColor("#000000");
        doc.text("Patient Information", 30, sectionMarginTop);
        
        const patientInfoData = [
            { label: "First Name", value: treatmentPlan.first_name },
            { label: "Last Name", value: treatmentPlan.last_name },
            { label: "Dementia Level", value: treatmentPlan.dementia_level },
            { label: "Visit Frequency", value: treatmentPlan.visit_frequency },
            { label: "Next Appointment", value: treatmentPlan.next_appointment }
        ];

        // Draw Border for Patient Info
        const patientInfoStartY = sectionMarginTop + 20;
        doc.setFontSize(12);
        doc.setFont("helvetica", "normal");
        patientInfoData.forEach((info, index) => {
            const yPos = patientInfoStartY + (index * 15);
            doc.text(`${info.label}:`, 30, yPos);
            doc.text(String(info.value), 150, yPos); // Ensure value is converted to a string
        });

        // Add a line after Patient Info Section
        const lastPatientInfoY = patientInfoStartY + (patientInfoData.length * 15);
        doc.line(30, lastPatientInfoY + 5, 600, lastPatientInfoY + 5);

        // Treatment Recommendations Section with Table
        doc.setFontSize(18);
        doc.setFont("helvetica", "bold");
        doc.setTextColor("#000000");
        doc.text("Treatment Recommendations", 30, lastPatientInfoY + 30);

        // Modify recommendations array to remove numbering
        const recommendations = treatmentPlan.treatment_recommendation.map((rec) => [rec]);  // Removed numbering

        doc.autoTable({
            startY: lastPatientInfoY + 40,
            head: [['Recommendations']],  // Only one column header
            body: recommendations,
            theme: 'grid',
            styles: {
                font: "helvetica",
                fontSize: 12,
                cellPadding: 5,
                halign: 'center',
                valign: 'middle'
            },
            headStyles: {
                fillColor: [48, 128, 186], // Header background color
                textColor: [255, 255, 255], // Header text color
                fontStyle: 'bold'
            },
            bodyStyles: {
                textColor: [0, 0, 0], // Body text color
                fontSize: 12,
                halign: 'left',
            },
            tableLineWidth: 0.1,
            tableLineColor: [0, 0, 0]
        });

        // Footer Section
        doc.setFontSize(12);
        doc.setTextColor("#999999");
        doc.text(`Generated by Doctor Shabeer`, 30, doc.lastAutoTable.finalY + 20);

        // Save the generated PDF
        doc.save(`${name}_Treatment_Plan.pdf`);
    }
}

export default PdfGenerator = new PdfGenerator();
